
import base64, zlib, marshal, types
__obfuscated_data__ = "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"
__code__ = marshal.loads(zlib.decompress(base64.b64decode(__obfuscated_data__)))
exec(__code__)
